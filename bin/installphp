#!/bin/bash

strstr() {
  [ "${1#*$2*}" = "$1" ] && return 1
  return 0
}

CURRENT=$(php -r '$v=explode(".", PHP_VERSION); echo $v[0].".".$v[1];')
AVAILBLE=$(apt-cache search --names-only php | egrep '^php[0-9]\.[0-9] ' | awk '{print $1}' | sort | sed 's/php//g')

SKIPLIST="php-apcu php-apcu-bc php-gmagick \
php-yac \
php5.6-apcu php5.6-apcu-bc php5.6-gmagick \
php7.0-apcu php7.0-apcu-bc php7.0-gmagick \
php7.1-apcu php7.1-apcu-bc php7.1-gmagick \
php7.2-apcu php7.2-apcu-bc php7.2-gmagick \
php7.3-apcu php7.3-apcu-bc php7.3-gmagick \
php7.4-apcu php7.4-apcu-bc php7.4-gmagick \
php8.0-apcu php8.0-apcu-bc php8.0-gmagick \
php8.1-apcu php8.1-apcu-bc php8.1-gmagick"

OPTIONS=" "
for VER in $AVAILBLE
do
    OPTIONS+="$VER off "
done

cmd=(dialog --stdout --no-items --separate-output --ok-label "Search for packages" --checklist "PHP Versions to Install:" 22 76 16)
TOINSTALL=$("${cmd[@]}" "${OPTIONS}")

INSTALLED=$(apt-cache search php"${CURRENT}" | awk '{print $1}' | grep ${CURRENT})

CANDIDATES=""

CANDIDCOUNT=$(echo "$INSTALLED" | wc -w)
AVAILCOUNT=$(echo "$TOINSTALL" | wc -w);

let "ALLCANDIDATESCOUNT = $CANDIDCOUNT * $AVAILCOUNT"


PACKAGENO=0
for VERSION_TO_INSTALL in $TOINSTALL
do
    echo check availble packages for $VERSION_TO_INSTALL
    for MUSTR in $INSTALLED
    do
	CANDIDAT=$(echo ${MUSTR} | sed "s/\$CURRENT/$VERSION_TO_INSTALL/g")
	PACKAGENO=$((PACKAGENO+1))

	awk "BEGIN { pc=100*${PACKAGENO}/${ALLCANDIDATESCOUNT}; i=int(pc); print (pc-i<0.5)?i:i+1 }" | dialog --gauge "Checking for $CANDIDAT" 10 70 0

	if ! $(apt-cache pkgnames | grep -q "\<$CANDIDAT\>"); then
	    echo $CANDIDAT is not availble
	else
		if [[ $SKIPLIST == *"$CANDIDAT"* ]] ; then
        	    CANDIDATES+=" $CANDIDAT off"
        	else
		    strstr $CANDIDAT  "dbgsym" && CANDIDATES+=" $CANDIDAT off" || CANDIDATES+=" $CANDIDAT on"
        	fi
	fi
    done

done


cmd=(dialog --stdout --no-items --separate-output --ok-label "Install packages" --checklist "PHP Packages to Install:" 22 76 16)
TOINSTALL=$("${cmd[@]}" ${CANDIDATES})


sudo apt install $TOINSTALL
